{
    "name": "CairoSVG",
    "cve_id": "CVE-2021-21236",
    "publish_date": "2021-01-06T17:15Z",
    "cwe_id": "CWE-400",
    "owner": "Guillaume Ayoub",
    "affected_versions": [
        {
            "version_value": "2.5.1",
            "operator": "<"
        }
    ],
    "references": [
        "https://github.com/Kozea/CairoSVG/releases/tag/2.5.1",
        "https://pypi.org/project/CairoSVG/",
        "https://github.com/Kozea/CairoSVG/security/advisories/GHSA-hq37-853p-g5cf",
        "https://github.com/advisories/GHSA-hq37-853p-g5cf",
        "https://github.com/Kozea/CairoSVG/commit/cfc9175e590531d90384aa88845052de53d94bf3",
        "https://nvd.nist.gov/vuln/detail/CVE-2021-21236"
    ],
    "description": "From NVD:\nCairoSVG is a Python (pypi) package. CairoSVG is an SVG converter based on Cairo. In CairoSVG before version 2.5.1, there is a regular expression denial of service (REDoS) vulnerability. When processing SVG files, the python package CairoSVG uses two regular expressions which are vulnerable to Regular Expression Denial of Service (REDoS). If an attacker provides a malicious SVG, it can make cairosvg get stuck processing the file for a very long time. This is fixed in version 2.5.1. See Referenced GitHub advisory for more information.\nFrom Github:\n# Doyensec Vulnerability Advisory \n\n* Regular Expression Denial of Service (REDoS) in cairosvg\n* Affected Product: CairoSVG v2.0.0+\n* Vendor: https://github.com/Kozea\n* Severity: Medium\n* Vulnerability Class: Denial of Service\n* Author(s): Ben Caller ([Doyensec](https://doyensec.com))\n\n## Summary\n\nWhen processing SVG files, the python package CairoSVG uses two regular expressions which are vulnerable to Regular Expression Denial of Service (REDoS).\nIf an attacker provides a malicious SVG, it can make cairosvg get stuck processing the file for a very long time.\n\n## Technical description\n\nThe vulnerable regular expressions are\n\nhttps://github.com/Kozea/CairoSVG/blob/9c4a982b9a021280ad90e89707eacc1d114e4ac4/cairosvg/colors.py#L190-L191\n\nThe section between 'rgb(' and the final ')' contains multiple overlapping groups.\n\nSince all three infinitely repeating groups accept spaces, a long string of spaces causes catastrophic backtracking when it is not followed by a closing parenthesis.\n\nThe complexity is cubic, so doubling the length of the malicious string of spaces makes processing take 8 times as long.\n\n## Reproduction steps\n\nCreate a malicious SVG of the form:\n\n \n\nwith the following code:\n\n ''\n\nNote that there is no closing parenthesis before the semi-colon.\n\nRun cairosvg e.g.:\n\n cairosvg cairo-redos.svg -o x.png\n\nand notice that it hangs at 100% CPU. Increasing the number of spaces increases the processing time with cubic complexity.\n\n## Remediation\n\nFix the regexes to avoid overlapping parts. Perhaps remove the [ \\n\\r\\t]* groups from the regex, and use .strip() on the returned capture group.\n\n## Disclosure timeline\n\n- 2020-12-30: Vulnerability disclosed via email to CourtBouillon",
    "latest_version": "2.5.1",
    "language": "python",
    "license": "LGPL-3.0-or-later",
    "repository_summary": "A Simple SVG Converter based on Cairo",
    "repo_url": "https://github.com/Kozea/CairoSVG",
    "impact": {
        "cvss2_score": null,
        "cvss2_severity": null,
        "vector_string": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:N/A:H",
        "av": "NETWORK",
        "ac": "LOW",
        "pr": "LOW",
        "c": "NONE",
        "i": "NONE",
        "a": "LOW",
        "impact_score": 3.6,
        "exploitability_score": 2.1,
        "cvss3_score": 5.7,
        "cvss3_severity": "MEDIUM",
        "ui": "REQUIRED",
        "s": "UNCHANGED"
    },
    "ochrona_severity_score": 5.7
}