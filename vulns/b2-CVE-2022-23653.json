{
    "name": "b2",
    "cve_id": "CVE-2022-23653",
    "publish_date": "2022-02-23T23:15Z",
    "cwe_id": "CWE-367",
    "owner": "Backblaze, Inc.",
    "affected_versions": [
        {
            "version_value": "3.2.1",
            "operator": "<"
        }
    ],
    "references": [
        "https://nvd.nist.gov/vuln/detail/CVE-2022-23653",
        "https://github.com/Backblaze/B2_Command_Line_Tool/security/advisories/GHSA-8wr4-2wm6-w3pr",
        "https://github.com/Backblaze/B2_Command_Line_Tool/commit/c74029f9f75065e8f7e3c3ec8e0a23fb8204feeb",
        "https://github.com/advisories/GHSA-8wr4-2wm6-w3pr"
    ],
    "description": "From NVD:\nB2 Command Line Tool is the official command line tool for the backblaze cloud storage service. Linux and Mac releases of the B2 command-line tool version 3.2.0 and below contain a key disclosure vulnerability that, in certain conditions, can be exploited by local attackers through a time-of-check-time-of-use (TOCTOU) race condition. The command line tool saves API keys (and bucket name-to-id mapping) in a local database file (`$XDG_CONFIG_HOME/b2/account_info`, `~/.b2_account_info` or a user-defined path) when `b2 authorize-account` is first run. This happens regardless of whether a valid key is provided or not. When first created, the file is world readable and is (typically a few milliseconds) later altered to be private to the user. If the directory is readable by a local attacker and the user did not yet run `b2 authorize-account` then during the brief period between file creation and permission modification, a local attacker can race to open the file and maintain a handle to it. This allows the local attacker to read the contents after the file after the sensitive information has been saved to it. Users that have not yet run `b2 authorize-account` should upgrade to B2 Command-Line Tool v3.2.1 before running it. Users that have run `b2 authorize-account` are safe if at the time of the file creation no other local users had read access to the local configuration file. Users that have run `b2 authorize-account` where the designated path could be opened by another local user should upgrade to B2 Command-Line Tool v3.2.1 and remove the database and regenerate all application keys. Note that `b2 clear-account` does not remove the database file and it should not be used to ensure that all open handles to the file are invalidated. If B2 Command-Line Tool cannot be upgraded to v3.2.1 due to a dependency conflict, a binary release can be used instead. Alternatively a new version could be installed within a virtualenv, or the permissions can be changed to prevent local users from opening the database file.\nFrom Github:\n### Impact\n\nLinux and Mac releases of the B2 command-line tool version 3.2.0 and below contain a key disclosure vulnerability that, in certain conditions, can be exploited by local attackers through a time-of-check-time-of-use (TOCTOU) race condition.\n\nThe command line tool saves API keys (and bucket name-to-id mapping) in a local database file (`$XDG_CONFIG_HOME/b2/account_info`, `~/.b2_account_info` or a user-defined path) when `b2 authorize-account` is first run. This happens regardless of whether a valid key is provided or not. When first created, the file is world readable and is (typically a few milliseconds) later altered to be private to the user. If the directory is readable by a local attacker and the user did not yet run `b2 authorize-account` then during the brief period between file creation and permission modification, a local attacker can race to open the file and maintain a handle to it. This allows the local attacker to read the contents after the file after the sensitive information has been saved to it.\n\n### Remediation\n\nUsers that have not yet run `b2 authorize-account` should upgrade to B2 Command-Line Tool v3.2.1 before running it.\n\nUsers that have run `b2 authorize-account` are safe if at the time of the file creation no other local users had read access to the local configuration file.\n\nUsers that have run `b2 authorize-account` where the designated path could be opened by another local user should upgrade to B2 Command-Line Tool v3.2.1 and remove the database and regenerate all application keys. Note that `b2 clear-account` does not remove the database file and it should not be used to ensure that all open handles to the file are invalidated.\n\n### Workarounds\nIf B2 Command-Line Tool cannot be upgraded to v3.2.1 due to a dependency conflict, a binary release can be used instead. Alternatively a new version could be installed within a virtualenv, or the permissions can be changed to prevent local users from opening the database file.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [B2 Command-Line Tool](https://github.com/Backblaze/B2_Command_Line_Tool) mentioning the CVE id in the issue title\n* Email us at [security@backblaze.com](mailto:security@backblaze.com)\n",
    "latest_version": "3.2.1",
    "language": "python",
    "license": "MIT",
    "repository_summary": "Command Line Tool for Backblaze B2",
    "repo_url": "https://github.com/Backblaze/B2_Command_Line_Tool",
    "impact": {
        "cvss2_score": null,
        "cvss2_severity": null,
        "av": "LOCAL",
        "ac": "HIGH",
        "pr": "LOW",
        "c": "HIGH",
        "i": "NONE",
        "a": "NONE",
        "impact_score": 3.6,
        "exploitability_score": 1.0,
        "cvss3_score": 4.7,
        "cvss3_severity": "MEDIUM",
        "vector_string": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N",
        "ui": "NONE",
        "s": "UNCHANGED"
    },
    "ochrona_severity_score": 4.7
}