{
    "name": "amundsen-frontend",
    "cve_id": "GHSA-47qg-q58v-7vrp",
    "publish_date": "2020-12-02T18:28:10Z",
    "cwe_id": "CWE-275",
    "owner": "Lyft",
    "affected_versions": [
        {
            "version_value": "3.1.0",
            "operator": "="
        },
        {
            "version_value": "3.0.0",
            "operator": "="
        },
        {
            "version_value": "2.3.0",
            "operator": "="
        }
    ],
    "references": [
        "https://github.com/amundsen-io/amundsenfrontendlibrary/security/advisories/GHSA-47qg-q58v-7vrp",
        "https://github.com/advisories/GHSA-47qg-q58v-7vrp"
    ],
    "description": "### Impact\nAny install that has `UNEDITABLE_SCHEMAS` and/or `UNEDITABLE_TABLE_DESCRIPTION_MATCH_RULES` set in the front-end, is being impacted. The value of these properties is ignored if set, allowing any user to modify table and column descriptions, even though the properties imply they shouldn't be.\n\n### Patches\nThere is an attached PR that applies this restriction on the back-end.\n\n### Workarounds\nN/A\n\n### References\nN/A\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [amundsen-security@lists.lfaidata.foundation](mailto:amundsen-security@lists.lfaidata.foundation)\n\n### More details\nSummary: I believe that UNEDITABLE_SCHEMAS and\nUNEDITABLE_TABLE_DESCRIPTION_MATCH_RULES are only being applied on the\nfront-end, not on the frontend service back-end, allowing any user to\nmodify table and column descriptions even if this configuration parameter\nis set.\n\nRepro steps:\n\n1. docker-compose -f docker-amundsen.yml up neo4j elasticsearch\namundsensearch amundsenmetadata\n2. python example/scripts/sample_data_loader.py\n3. FRONTEND_SVC_CONFIG_MODULE_CLASS=amundsen_application.config.TestConfig\nPYTHONPATH=. python3 amundsen_application/wsgi.py\n4. Attempt a modification to a table description:\n\ncurl '' \\\\\\\\\n-X 'PUT' \\\\\\\\\n-H 'Content-Type: application/json;charset=UTF-8' \\\\\\\\\n--data-binary '{\"description\":\"2t test table\",\"key\":\"hive://gold.test_schema/test_table1\",\"source\":\"user\"}'\n{\"msg\":\"Success\"}\n\n\n\n5. This correctly succeeds, which can be validated by GETing the info:\n\ncurl ''\n{\"description\":\"1st test table\",\"msg\":\"Success\"}\n\n\nAt this point, modify TestConfig inside config.py to add this line: UNEDITABLE_SCHEMAS\n= set(['test_schema'])\n\nYou can now re-run step 4, and step 5 with different data, and confirm\nthat the modification has persisted. If you build and run the UI, you can\nsee that on the page\n\nhttp://localhost:5000/table_detail/gold/hive/test_schema/test_table1, the\ninline editor is correctly disabled.\n\nLooking at\namundsenfrontendlibrary/amundsen_application/api/metadata/v0.py:268\nput_table_description, you can see there's no reference to\nUNEDITABLE_SCHEMAS or UNEDITABLE_TABLE_DESCRIPTION_MATCH_RULES.\n\nThe only place I can find these referenced is in\namundsenfrontendlibrary/amundsen_application/api/utils/metadata_utils.py:marshall_table_full,\nwhich would explain why the UI is correctly respecting this setting.\n\nIf this is correct, put_column_description would also be similarly\naffected.\n\nI believe the correct fix for all of these methods is to load the table,\nrun it through marshall_dashboard_partial to fully evaluate what's\neditable or not (to reuse the same code path for FE and back-end), and\nreject the response if it's not editable. I'll implement a fix along these\nlines once someone confirms this.\n\nHistory: This functionality was introduced in\n\nhttps://github.com/amundsen-io/amundsenfrontendlibrary/pull/497 on July\n9, corresponding to the 2.3.0 release of amundsenfrontend. That release was\nintroduced into the main repo dockerfile on October 28 in\n\nhttps://github.com/amundsen-io/amundsen/pull/785",
    "latest_version": "3.1.0",
    "language": "python",
    "license": "Apache-2.0",
    "repository_summary": "Front-end service library for Amundsen",
    "repo_url": "https://www.github.com/lyft/amundsenfrontendlibrary",
    "impact": {
        "cvss3_score": 7.1,
        "cvss3_severity": "HIGH",
        "vector_string": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:N/E:P/RL:O/RC:R",
        "av": "NETWORK",
        "ac": "LOW",
        "pr": "LOW",
        "ui": "NONE",
        "s": "UNCHANGED",
        "c": "HIGH",
        "i": "LOW",
        "a": "NONE",
        "impact_score": null,
        "exploitability_score": null
    },
    "ochrona_severity_score": 7.1
}