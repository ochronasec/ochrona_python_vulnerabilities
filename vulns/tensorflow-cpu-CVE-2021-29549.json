{
    "name": "tensorflow-cpu",
    "cve_id": "CVE-2021-29549",
    "publish_date": "2021-05-14T20:15Z",
    "cwe_id": "CWE-369",
    "owner": "Google Inc.",
    "affected_versions": [
        {
            "version_value": "2.5.0",
            "operator": "<"
        }
    ],
    "references": [
        "https://github.com/tensorflow/tensorflow/commit/744009c9e5cc5d0447f0dc39d055f917e1fd9e16",
        "https://github.com/advisories/GHSA-x83m-p7pv-ch8v",
        "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x83m-p7pv-ch8v",
        "https://nvd.nist.gov/vuln/detail/CVE-2021-29549"
    ],
    "description": "From NVD:\nTensorFlow is an end-to-end open source platform for machine learning. An attacker can cause a runtime division by zero error and denial of service in `tf.raw_ops.QuantizedBatchNormWithGlobalNormalization`. This is because the implementation(https://github.com/tensorflow/tensorflow/blob/6f26b3f3418201479c264f2a02000880d8df151c/tensorflow/core/kernels/quantized_add_op.cc#L289-L295) computes a modulo operation without validating that the divisor is not zero. Since `vector_num_elements` is determined based on input shapes(https://github.com/tensorflow/tensorflow/blob/6f26b3f3418201479c264f2a02000880d8df151c/tensorflow/core/kernels/quantized_add_op.cc#L522-L544), a user can trigger scenarios where this quantity is 0. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\nFrom Github:\n### Impact\nAn attacker can cause a runtime division by zero error and denial of service in `tf.raw_ops.QuantizedAdd`:\n\n```python\nimport tensorflow as tf\n\nx = tf.constant([68, 228], shape=[2, 1], dtype=tf.quint8)\ny = tf.constant([], shape=[2, 0], dtype=tf.quint8)\n\nmin_x = tf.constant(10.723421015884028)\nmax_x = tf.constant(15.19578006631113)\nmin_y = tf.constant(-5.539003866682977)\nmax_y = tf.constant(42.18819949559947)\n\ntf.raw_ops.QuantizedAdd(x=x, y=y, min_x=min_x, max_x=max_x, min_y=min_y, max_y=max_y)\n```\n\nThis is because the [implementation](https://github.com/tensorflow/tensorflow/blob/6f26b3f3418201479c264f2a02000880d8df151c/tensorflow/core/kernels/quantized_add_op.cc#L289-L295) computes a modulo operation without validating that the divisor is not zero.\n\n```cc\nvoid VectorTensorAddition(const T* vector_data, float min_vector,\n                          float max_vector, int64 vector_num_elements,\n                          const T* tensor_data, float min_tensor,\n                          float max_tensor, int64 tensor_num_elements,\n                          float output_min, float output_max, Toutput* output) {\n  for (int i = 0; i < tensor_num_elements; ++i) {\n    const int64 vector_i = i % vector_num_elements;\n    ...\n  }\n}\n```\n\nSince `vector_num_elements` is [determined based on input shapes](https://github.com/tensorflow/tensorflow/blob/6f26b3f3418201479c264f2a02000880d8df151c/tensorflow/core/kernels/quantized_add_op.cc#L522-L544), a user can trigger scenarios where this quantity is 0.\n\n### Patches\nWe have patched the issue in GitHub commit [744009c9e5cc5d0447f0dc39d055f917e1fd9e16](https://github.com/tensorflow/tensorflow/commit/744009c9e5cc5d0447f0dc39d055f917e1fd9e16).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
    "latest_version": "2.3.1",
    "language": "python",
    "license": "Apache-2.0",
    "repository_summary": "TensorFlow is an open source machine learning framework for everyone.",
    "repo_url": "https://github.com/tensorflow/tensorflow",
    "impact": {
        "cvss2_score": 2.1,
        "cvss2_severity": "LOW",
        "vector_string": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
        "av": "LOCAL",
        "ac": "LOW",
        "pr": "LOW",
        "c": "NONE",
        "i": "NONE",
        "a": "HIGH",
        "impact_score": 3.6,
        "exploitability_score": 1.8,
        "cvss3_score": 5.5,
        "cvss3_severity": "MEDIUM",
        "ui": "NONE",
        "s": "UNCHANGED"
    },
    "ochrona_severity_score": 5.5
}