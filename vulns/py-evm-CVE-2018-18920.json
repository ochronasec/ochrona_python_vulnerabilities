{"name": "py-evm", "cve_id": "CVE-2018-18920", "publish_date": "2018-11-12T02:29Z", "cwe_id": "CWE-119", "owner": "Ethereum Foundation", "affected_versions": [{"version_value": "0.2.0a33", "operator": "="}], "references": ["https://twitter.com/NettaLab/status/1060889400102383617", "https://github.com/advisories/GHSA-vqgp-4jgj-5j64", "https://github.com/ethereum/py-evm/issues/1448", "https://nvd.nist.gov/vuln/detail/CVE-2018-18920", "https://twitter.com/AlexanderFisher/status/1060923428641878019", "https://www.reddit.com/r/ethereum/comments/9vkk2g/netta_labs_claim_to_have_found_a_vulnerability_in/e9d3wyx/"], "description": "From NVD:\nPy-EVM v0.2.0-alpha.33 allows attackers to make a vm.execute_bytecode call that triggers computation._stack.values with '\"stack\": [100, 100, 0]' where b'\\x' was expected, resulting in an execution failure because of an invalid opcode. This is reportedly related to \"smart contracts can be executed indefinitely without gas being paid.\"\nFrom Github:\nPy-EVM v0.2.0-alpha.33 allows attackers to make a vm.execute_bytecode call that triggers computation._stack.values with '\"stack\": [100, 100, 0]' where b'\\x' was expected, resulting in an execution failure because of an invalid opcode. This is reportedly related to \"smart contracts can be executed indefinitely without gas being paid.\"", "latest_version": "0.3.0a20", "language": "python", "license": "MIT", "repository_summary": "Python implementation of the Ethereum Virtual Machine", "repo_url": "https://github.com/ethereum/py-evm", "impact": {"cvss2_score": 6.8, "cvss2_severity": "MEDIUM", "vector_string": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "av": "NETWORK", "ac": "LOW", "pr": "NONE", "c": "HIGH", "i": "HIGH", "a": "HIGH", "impact_score": 5.9, "exploitability_score": 2.8, "cvss3_score": 8.8, "cvss3_severity": "HIGH", "ui": "REQUIRED", "s": "UNCHANGED"}, "ochrona_severity_score": 8.8}