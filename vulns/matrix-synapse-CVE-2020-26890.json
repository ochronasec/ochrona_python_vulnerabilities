{"name": "matrix-synapse", "cve_id": "CVE-2020-26890", "publish_date": "2020-11-24T03:15Z", "cwe_id": "CVE-400", "owner": "Matrix Authors", "affected_versions": [{"version_value": "1.20.0", "operator": "<"}], "references": ["https://github.com/advisories/GHSA-4mp3-385r-v63f", "https://github.com/matrix-org/synapse/security/advisories/GHSA-4mp3-385r-v63f", "https://nvd.nist.gov/vuln/detail/CVE-2020-26890"], "description": "From NVD:\nMatrix Synapse before 1.20.0 erroneously permits non-standard NaN, Infinity, and -Infinity JSON values in fields of m.room.member events, allowing remote attackers to execute a denial of service attack against the federation and common Matrix clients. If such a malformed event is accepted into the room's state, the impact is long-lasting and is not fixed by an upgrade to a newer version, requiring the event to be manually redacted instead. Since events are replicated to servers of other room members, the impact is not constrained to the server of the event sender.\nFrom Github:\n### Impact\nA denial of service attack against Matrix clients can be exploited by sending an event including invalid JSON data to Synapse. Synapse would relay the data to clients which could crash or hang. Impact is long-lasting if the event is made part of the room state.\n\n### Patches\nAt a minimum #8106 and #8291 must be applied. #7372 and #8124 include additional checks.\n\n### Workarounds\nThere are no known workarounds.\n\n### Upgrading notes\nIf an invalid event is accepted by an earlier Synapse it can become part of the room state and will not be fixed by upgrading Synapse. Redacting the invalid event should avoid clients receiving the invalid event.", "latest_version": "1.23.0", "language": "python", "license": "Apache-2.0", "repository_summary": "Reference homeserver for the Matrix decentralised comms protocol", "repo_url": "https://github.com/matrix-org/synapse", "impact": {"cvss2_score": null, "cvss2_severity": null, "av": null, "ac": null, "pr": null, "c": null, "i": null, "a": null, "impact_score": null, "exploitability_score": null, "cvss3_score": null, "cvss3_severity": null, "ui": null, "s": null}, "ochrona_severity_score": 7.0}