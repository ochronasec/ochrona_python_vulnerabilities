{"name": "tensorflow", "cve_id": "CVE-2020-15193", "publish_date": "2020-09-25T19:15Z", "cwe_id": "CWE-908", "owner": "Google Inc.", "affected_versions": [{"version_value": "2.2.1", "operator": "<"}, {"version_value": "2.3.0", "operator": "="}], "references": ["https://github.com/advisories/GHSA-rjjg-hgv6-h69v", "https://github.com/tensorflow/tensorflow/commit/22e07fb204386768e5bcbea563641ea11f96ceb8", "http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html", "https://nvd.nist.gov/vuln/detail/CVE-2020-15193", "https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1", "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rjjg-hgv6-h69v"], "description": "From NVD:\nIn Tensorflow before versions 2.2.1 and 2.3.1, the implementation of `dlpack.to_dlpack` can be made to use uninitialized memory resulting in further memory corruption. This is because the pybind11 glue code assumes that the argument is a tensor. However, there is nothing stopping users from passing in a Python object instead of a tensor. The uninitialized memory address is due to a `reinterpret_cast` Since the `PyObject` is a Python object, not a TensorFlow Tensor, the cast to `EagerTensor` fails. The issue is patched in commit 22e07fb204386768e5bcbea563641ea11f96ceb8 and is released in TensorFlow versions 2.2.1, or 2.3.1.\nFrom Github:\n### Impact\nThe implementation of `dlpack.to_dlpack` can be made to use uninitialized memory resulting in further memory corruption. This is because the pybind11 glue code assumes that the argument is a tensor:\nhttps://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/python/tfe_wrapper.cc#L1361\n\nHowever, there is nothing stopping users from passing in a Python object instead of a tensor.\n```python\nIn [2]: tf.experimental.dlpack.to_dlpack([2])                                                                                                                                            \n==1720623==WARNING: MemorySanitizer: use-of-uninitialized-value                                                                                                                            \n    #0 0x55b0ba5c410a in tensorflow::(anonymous namespace)::GetTensorFromHandle(TFE_TensorHandle*, TF_Status*) third_party/tensorflow/c/eager/dlpack.cc:46:7\n    #1 0x55b0ba5c38f4 in tensorflow::TFE_HandleToDLPack(TFE_TensorHandle*, TF_Status*) third_party/tensorflow/c/eager/dlpack.cc:252:26\n... \n```\n\nThe uninitialized memory address is due to a `reinterpret_cast`\nhttps://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/python/eager/pywrap_tensor.cc#L848-L850\n\nSince the `PyObject` is a Python object, not a TensorFlow Tensor, the cast to `EagerTensor` fails. \n\n### Patches\nWe have patched the issue in 22e07fb204386768e5bcbea563641ea11f96ceb8 and will release a patch release for all affected versions.\n\nWe recommend users to upgrade to TensorFlow 2.2.1 or 2.3.1.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.", "latest_version": "2.3.1", "language": "python", "license": "Apache-2.0", "repository_summary": "TensorFlow is an open source machine learning framework for everyone.", "repo_url": "https://github.com/tensorflow/tensorflow", "impact": {"cvss2_score": 5.5, "cvss2_severity": "MEDIUM", "vector_string": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:L", "av": "NETWORK", "ac": "LOW", "pr": "LOW", "c": "NONE", "i": "HIGH", "a": "LOW", "impact_score": 4.2, "exploitability_score": 2.8, "cvss3_score": 7.1, "cvss3_severity": "HIGH", "ui": "NONE", "s": "UNCHANGED"}, "ochrona_severity_score": 7.1}