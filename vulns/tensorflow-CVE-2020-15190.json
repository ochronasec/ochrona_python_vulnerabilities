{"name": "tensorflow", "cve_id": "CVE-2020-15190", "publish_date": "2020-09-25T19:15Z", "cwe_id": "CWE-476", "owner": "Google Inc.", "affected_versions": [{"version_value": "1.15.4", "operator": "<"}, {"version_value": "2.0.0", "operator": "="}, {"version_value": "2.0.1", "operator": "="}, {"version_value": "2.0.2", "operator": "="}, {"version_value": "2.1.0", "operator": "="}, {"version_value": "2.1.1", "operator": "="}, {"version_value": "2.2.0", "operator": "="}, {"version_value": "2.3.0", "operator": "="}], "references": ["https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4g9f-63rx-5cw4", "https://nvd.nist.gov/vuln/detail/CVE-2020-15190", "https://github.com/advisories/GHSA-4g9f-63rx-5cw4", "http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html", "https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1", "https://github.com/tensorflow/tensorflow/commit/da8558533d925694483d2c136a9220d6d49d843c"], "description": "From NVD:\nIn Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, the `tf.raw_ops.Switch` operation takes as input a tensor and a boolean and outputs two tensors. Depending on the boolean value, one of the tensors is exactly the input tensor whereas the other one should be an empty tensor. However, the eager runtime traverses all tensors in the output. Since only one of the tensors is defined, the other one is `nullptr`, hence we are binding a reference to `nullptr`. This is undefined behavior and reported as an error if compiling with `-fsanitize=null`. In this case, this results in a segmentation fault The issue is patched in commit da8558533d925694483d2c136a9220d6d49d843c, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\nFrom Github:\n### Impact\nThe [`tf.raw_ops.Switch`](https://www.tensorflow.org/api_docs/python/tf/raw_ops/Switch) operation takes as input a tensor and a boolean and outputs two tensors. Depending on the boolean value, one of the tensors is exactly the input tensor whereas the other one should be an empty tensor.\n\nHowever, the eager runtime traverses all tensors in the output:\nhttps://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/core/common_runtime/eager/kernel_and_device.cc#L308-L313\n\nSince only one of the tensors is defined, the other one is `nullptr`, hence we are binding a reference to `nullptr`. This is undefined behavior and reported as an error if compiling with `-fsanitize=null`. In this case, this results in a segmentation fault\n\n### Patches\nWe have patched the issue in da8558533d925694483d2c136a9220d6d49d843c and will release a patch release for all affected versions.\n\nWe recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.", "latest_version": "2.3.1", "language": "python", "license": "Apache-2.0", "repository_summary": "TensorFlow is an open source machine learning framework for everyone.", "repo_url": "https://github.com/tensorflow/tensorflow", "impact": {"cvss2_score": 5.0, "cvss2_severity": "MEDIUM", "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L", "av": "NETWORK", "ac": "LOW", "pr": "NONE", "c": "NONE", "i": "NONE", "a": "LOW", "impact_score": 1.4, "exploitability_score": 3.9, "cvss3_score": 5.3, "cvss3_severity": "MEDIUM", "ui": "NONE", "s": "UNCHANGED"}, "ochrona_severity_score": 5.3}