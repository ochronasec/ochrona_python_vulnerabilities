{
    "name": "mitmproxy",
    "cve_id": "CVE-2021-39214",
    "publish_date": "2021-09-16T15:15Z",
    "cwe_id": "CWE-444",
    "owner": "Aldo Cortesi",
    "affected_versions": [
        {
            "version_value": "7.0.3",
            "operator": "<"
        }
    ],
    "references": [
        "https://github.com/mitmproxy/mitmproxy/security/advisories/GHSA-22gh-3r9q-xf38",
        "https://nvd.nist.gov/vuln/detail/CVE-2021-39214",
        "https://github.com/advisories/GHSA-22gh-3r9q-xf38"
    ],
    "description": "From NVD:\nmitmproxy is an interactive, SSL/TLS-capable intercepting proxy. In mitmproxy 7.0.2 and below, a malicious client or server is able to perform HTTP request smuggling attacks through mitmproxy. This means that a malicious client/server could smuggle a request/response through mitmproxy as part of another request/response's HTTP message body. While a smuggled request is still captured as part of another request's body, it does not appear in the request list and does not go through the usual mitmproxy event hooks, where users may have implemented custom access control checks or input sanitization. Unless one uses mitmproxy to protect an HTTP/1 service, no action is required. The vulnerability has been fixed in mitmproxy 7.0.3 and above.\nFrom Github:\n### Impact\n\nIn mitmproxy 7.0.2 and below, a malicious client or server is able to perform [HTTP request smuggling](https://en.wikipedia.org/wiki/HTTP_request_smuggling) attacks through mitmproxy. This means that a malicious client/server could smuggle a request/response through mitmproxy as part of another request/response's HTTP message body. While mitmproxy would only see one request, the target server would see multiple requests. A smuggled request is still captured as part of another request's body, but it does not appear in the request list and does not go through the usual mitmproxy event hooks, where users may have implemented custom access control checks or input sanitization.\n\nUnless you use mitmproxy to protect an HTTP/1 service, no action is required.\n\n\n### Patches\n\nThe vulnerability has been fixed in mitmproxy 7.0.3 and above.\n\n\n### Acknowledgements\n\nWe thank Jo\u00e3o Sobral (@chinchila) for responsibly disclosing this vulnerability to the mitmproxy team.\n\n\n### Timeline\n\n- **2021-09-08**: Received initial report for mitmproxy <= 6.0.2.\n- **2021-09-08**: Requested clarification if 7.x is affected.\n- **2021-09-10**: Received additional details, 7.x situation still unclear.\n- **2021-09-13**: Internally determined that 7.x is also affected.\n- **2021-09-13**: Shared initial fix with researcher.\n- **2021-09-14**: Received confirmation that fix is working, but H2.TE/H2.CL should also be looked at.\n- **2021-09-14**: Shared revised fix that includes additional H2.TE mitigations.\n- **2021-09-14**: Received confirmation that revised fix is working.\n- **2021-09-16**: Completed internal patch review.\n- **2021-09-16**: Published patch release and advisory.",
    "latest_version": "7.0.3",
    "language": "python",
    "license": "MIT",
    "repository_summary": "An interactive, SSL/TLS-capable intercepting proxy for HTTP/1, HTTP/2, and WebSockets.",
    "repo_url": "https://github.com/mitmproxy/mitmproxy",
    "impact": {
        "cvss2_score": null,
        "cvss2_severity": null,
        "av": "NETWORK",
        "ac": "HIGH",
        "pr": "NONE",
        "c": "HIGH",
        "i": "HIGH",
        "a": "HIGH",
        "impact_score": 5.9,
        "exploitability_score": 2.2,
        "cvss3_score": 8.1,
        "cvss3_severity": "HIGH",
        "vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "ui": "NONE",
        "s": "UNCHANGED"
    },
    "ochrona_severity_score": 8.1
}